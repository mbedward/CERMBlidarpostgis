% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_functions.R
\name{db_create_counts_table}
\alias{db_create_counts_table}
\title{Create the two point counts tables if they do not already exist}
\usage{
db_create_counts_table(dbsettings, tablename = "rasters.point_counts",
  username = "postgres")
}
\arguments{
\item{dbsettings}{A named list of database connection settings returned
by \code{\link{connect_to_database}}.}

\item{tablename}{Name of the raster table to hold point counts for individual
(not mosaiced) LAS images in the form \code{'schema.tablename'}. Defaults
to \code{'rasters.point_counts'}. The table for mosaiced rasters will be
given the same name plus the suffix \code{'_union'}.}

\item{username}{Name of the user (default: 'postgres').}
}
\description{
This function sets up two tables to store multi-band rasters of integer point
counts within voxels. Each table has two columns: \code{rid}: an
auto-incremented integer record number; \code{rast} raster tiles (i.e.
PostGIS storage tiles rather than LAS images). The first of the two tables
holds rasters derived from individual LAS images. The PostGIS tile size for
each record corresponds to the dimensions of the input poinit counts raster.
The second table, identified by the suffix \code{'_union'} holds rasters that
have been mosaiced by summing the values of overlapping edge pixels.
}
\details{
The reason for holding duplicate data is to allow for deletion and
re-importing of data (e.g. to fix artefacts in a particular raster) that
would otherwise be difficult with just the mosaiced data. There is no field
explicitly linking raster records to records in other tables (e.g. the LAS
metadata table). Such relationships are found via spatial queries.
}
