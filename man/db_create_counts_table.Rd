% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_functions.R
\name{db_create_counts_table}
\alias{db_create_counts_table}
\title{Create the point counts table if it does not already exist}
\usage{
db_create_counts_table(dbsettings, tablename = "rasters.point_counts",
  username = "postgres")
}
\arguments{
\item{dbsettings}{A named list of database connection settings returned
by \code{\link{connect_to_database}}.}

\item{tablename}{Name of the raster table to hold point counts in the form
\code{'schema.tablename'}. Defaults to \code{'rasters.point_counts'}.}

\item{username}{Name of the user (default: 'postgres').}
}
\value{
Invisibly returns a list with the following elements:
  \describe{
    \item{status}{An integer code: 0 for success (as per \code{system});
      1 for skipped (the table already existed); or -1 for error.}
    \item{msg}{Message returned by the database.}
  }
}
\description{
This function sets up a table to store multi-band rasters of integer point
counts within voxels. The table has two columns: \code{rid}: an
auto-incremented integer record number; \code{rast} raster tiles (aka chips)
stored in binary format. There is no field explicitly linking raster records
to records in other tables (e.g. the LAS metadata table) since, although
the tiles in the database may initially correspond to individual LAS files,
this can change if rasters are re-tiled or unioned to optimize queries.
}
