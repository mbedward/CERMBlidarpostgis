% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_functions.R
\name{db_get_query}
\alias{db_get_query}
\title{Submit an arbitrary SQL query}
\usage{
db_get_query(dbsettings, query)
}
\arguments{
\item{dbsettings}{A named list of database connection settings returned
by \code{db_connect_postgis} or \code{db_create_postgis}.}

\item{query}{SQL query as a character string or similar (e.g. \code{glue}
string).}
}
\description{
This is a short-cut function that retrieves the database connection object from a
\code{dbsettings} list, submits an SQL query, and returns the results as a data frame.
It is an alternative to composing queries as \code{dplyr} pipelines.
}
\examples{
\dontrun{
Sys.setenv(PGPASSWORD = "secret")
DBSettings <- db_connect_postgis("cermb_lidar")

# Simple query - count records in one of the tables
res <- db_get_query(DBSettings, "select count(*) as n from mgazone56.point_counts")

# A more complex query using the glue package to compose the SQL string
library(glue)

mapnames <- c("Dorrigo", "Drake", "Gosford")

values <- glue_collapse(glue("'{mapnames}'"), sep = ", ")

query <- glue::glue("select id, mapname, capture_start from
                       (select id, substring(filename, '^[^\\d]+') as mapname, capture_start
                        from mgazone56.las_metadata) as foo
                     where mapname in ({values});")

res <- db_get_query(DBSettings, query)
}

}
