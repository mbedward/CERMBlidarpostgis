% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_functions.R
\name{pg_sql}
\alias{pg_sql}
\title{Run an SQL command on a selected database}
\usage{
pg_sql(dbsettings, command = NULL, file = NULL, quiet = TRUE)
}
\arguments{
\item{dbsettings}{A named list of database connection settings returned
by \code{db_connect_postgis} or \code{db_create_postgis}.}

\item{command}{A valid SQL command as a character string or \code{glue}
object. Can also be a special \code{psql} command (see Details). Not
required if the \code{file} argument is used to read commands from a file.}

\item{file}{The path and name of a file containing the SQL command(s) to
run. Ignored if \code{command} is provided.}

\item{quiet}{If \code{TRUE} the output from the psql helper application is
returned invisibly; if \code{FALSE} (default) the output is returned
explicitly.}
}
\value{
Text of the database status message after running the command.
}
\description{
This function allows you to run arbitrary SQL commands on a selected database
via the active PostgreSQL server. It is an alternative to connecting to the
database via the RPostgreSQL package or similar. If the SQL commands are
provided as a character vector, they are run by first writing them to a
temporary file which is passed to the command line program \code{psql.exe}.
Multiple commands can be provided in concatenated form as either a
one-element character vector, or as a multi-element vector. In both cases,
each command must be followed by a semicolon as per normal SQL syntax (but
see Details for an exception to this rule in the case of special \code{psql}
commands).
}
\details{
The \code{psql} command line program installed with PostgreSQL supports a
set of special commands in addition to standard SQL statements. For example,
\code{'\d mytable'} will return a description of the specified table while
\code{'\dt'} will list all tables in the database. These commands can be
issued via the \code{pg_sql} function and do not require a following
semi-colon. Note however that R will require the leading backslash to be
'escaped', e.g. \code{'\\dt'} otherwise obscure error messages will result.
}
\examples{
\dontrun{
Sys.setenv(PGPASSWORD = "cermb")

dbsettings <- db_connect_postgis("cermb_lidar")

pg_sql(dbsettings, "SELECT COUNT(*) AS NRECS FROM FOO;")
}

}
\seealso{
\code{\link{db_connect_postgis}} \code{\link{db_create_postgis}}
}
